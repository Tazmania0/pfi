[
{
  "doctype": "Report",
  "report_name": "Executions - f",
  "ref_doctype": "Job Card",
  "report_type": "Query Report",
  "is_standard": "No",
  "module": "Pfi",
  "add_total_row": 1,
  "query": "SELECT `tabJob Card`.work_order AS \"Work Order\", \n`tabJob Card`.name AS \"Job Card\", \n`tabJob Card`.item_name AS \"Model-Size:Data:120\", \n `tabJob Card Time Log`.employee AS \"Employee\", \n`tabJob Card Time Log`.from_time AS \"From Time:Date:120\",\n`tabJob Card Time Log`.to_time AS \"To Time\", \n`tabJob Card`.time_required/`tabJob Card`.for_quantity AS \"Unit Time:Float:50\",\n `tabJob Card Time Log`.time_in_mins AS \"Exec Time, min:Float:50\",\n`tabJob Card`.time_required/`tabJob Card`.for_quantity * `tabJob Card Time Log`.completed_qty  AS \"Est. Time, min:Float:50\", \n`tabJob Card`.for_quantity AS \"QTY:int:90\",\n`tabJob Card Time Log`.completed_qty AS \"Completed Qty:int:90\",\n `tabJob Card`.operation AS \"Operation\" \nFROM `tabJob Card Time Log` INNER JOIN `tabJob Card` ON `tabJob Card`.name = `tabJob Card Time Log`.parent \n WHERE (`tabJob Card`.docstatus= (1 or 0) AND `tabJob Card Time Log`.docstatus= (1 or 0) ) \n AND  (`tabJob Card Time Log`.time_in_mins > 0 AND `tabJob Card Time Log`.to_time BETWEEN %(from)s AND  DATE_ADD(%(until)s, INTERVAL 1 DAY)  )\nORDER BY `tabJob Card Time Log`.employee, `tabJob Card Time Log`.to_time; ",
  "filters": [
    {
      "fieldname": "from",
      "label": "From Date",
      "fieldtype": "Date"
    },
    {
      "fieldname": "until",
      "label": "To Date",
      "fieldtype": "Date"
    }
  ]
}
]
